<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Cynicsss</title>
    <link>/post/</link>
    <description>Recent content in Posts on Cynicsss</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>©2019 Cynicsss.</copyright>
    <lastBuildDate>Mon, 13 Apr 2020 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>剑指offer41-50</title>
      <link>/post/%E5%89%91%E6%8C%87offer41-50/</link>
      <pubDate>Mon, 13 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/%E5%89%91%E6%8C%87offer41-50/</guid>
      <description>41题目描述 和为S的连续正数序列 小明很喜欢数学,有一天他在做数学作业时,要求计算出9~16的和,他马上就写出了正确答案是100。但是他并不满</description>
    </item>
    
    <item>
      <title>剑指offer31-40</title>
      <link>/post/%E5%89%91%E6%8C%87offer31-40/</link>
      <pubDate>Sun, 12 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/%E5%89%91%E6%8C%87offer31-40/</guid>
      <description>31题目描述 整数中1出现的次数（从1到n整数中1出现的次数） 求出1~13的整数中1出现的次数,并算出100~1300的整数中1出现的次数？为</description>
    </item>
    
    <item>
      <title>剑指offer21-30</title>
      <link>/post/%E5%89%91%E6%8C%87offer21-30/</link>
      <pubDate>Tue, 31 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/%E5%89%91%E6%8C%87offer21-30/</guid>
      <description>21题目描述 栈的压入、弹出序列： 输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否可能为该栈的弹出顺序。假设压入栈的所有数字</description>
    </item>
    
    <item>
      <title>剑指offer11-20</title>
      <link>/post/%E5%89%91%E6%8C%87offer11-20/</link>
      <pubDate>Wed, 25 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/%E5%89%91%E6%8C%87offer11-20/</guid>
      <description>11题目描述 二进制中1的个数： 输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。 思路 首先要明白几个常识 1.计算机中整数都是以补</description>
    </item>
    
    <item>
      <title>剑指offer01-10</title>
      <link>/post/%E5%89%91%E6%8C%87offer01-10/</link>
      <pubDate>Mon, 23 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/%E5%89%91%E6%8C%87offer01-10/</guid>
      <description>01题目描述 在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函</description>
    </item>
    
    <item>
      <title>AGSS-VOS: Attention Guided Single-Shot Video Object Segmentation 论文解读</title>
      <link>/post/agss-vos/</link>
      <pubDate>Wed, 29 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/agss-vos/</guid>
      <description>&lt;p&gt;此篇文章为iccv2019中关于视频分割的一篇文章，主要针对多物体进行视频object分割，值得一读&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>实用的数据结构</title>
      <link>/post/%E5%AE%9E%E7%94%A8%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
      <pubDate>Tue, 21 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/%E5%AE%9E%E7%94%A8%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid>
      <description>&lt;p&gt;课程第一章 实用的数据结构&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>VisDrone2019记录</title>
      <link>/post/visdrone2019/</link>
      <pubDate>Mon, 22 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/visdrone2019/</guid>
      <description>简单介绍本组VisDrone2019比赛Object Detection in Images任务所采用的算法方法。 Introduction RRNet 本次比赛提出并采用的网络框架为——RRNet，</description>
    </item>
    
    <item>
      <title>Pytorch Tensorboard</title>
      <link>/post/torchtensorboard/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/torchtensorboard/</guid>
      <description>&lt;p&gt;Pytorch Tensorboard的简单使用
&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; 
  href=&#34;https://example.com/images/tensorboard01.png&#34;&gt;&lt;img  src=&#34;https://example.com/images/tensorboard01.png&#34;
        alt=&#34;preview&#34;/&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DANet-CCNet</title>
      <link>/post/danet-ccnet/</link>
      <pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/danet-ccnet/</guid>
      <description>&lt;p&gt;两篇文章都是将self-attention机制应用到分割当中，扩大感受野。第二篇文章采用了更巧妙的方法来减少参数。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Context Encoding for Semantic Segmentation</title>
      <link>/post/context-encoding-for-semantic-segmentation/</link>
      <pubDate>Fri, 06 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/context-encoding-for-semantic-segmentation/</guid>
      <description>本文提出了上下文编码模块(Context Encoding Module)引入全局上下文信息(global contextual information)，用于捕获场景的上下文语义</description>
    </item>
    
    <item>
      <title>首次提交</title>
      <link>/post/firstpost/</link>
      <pubDate>Sun, 11 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/firstpost/</guid>
      <description>&lt;p&gt;blog首次提交测试&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>